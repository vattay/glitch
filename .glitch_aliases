IMAGE="oxide/glitch:master"

alias d0-clean='docker system prune'
alias d0-purge='docker system prune -a '
alias d0-stop-all='docker stop $(docker ps -q)'

DOCKER_SOCK=/var/run/docker.sock
DOCKER_GID=''
DOCKER_SOCKET_MOUNT=""
DOCKER_CWD_BIND="-v $(pwd):/home/dev/workspace/bound"
GLITCH_VOLUME='glitch-volume'

docker-sock-gid () {
    UN=$(uname)
    if [ "$UN" = "Darwin" ]; then
        DOCKER_GID=$(docker run --rm -it --privileged --pid=host debian nsenter -t 1 -m -u -n -i ls -anl /var/run/docker.sock | cut -d ' ' -f 14) 
    else
        DOCKER_GID=$(ls -nl /var/run/docker.sock | cut -d ' ' -f4)
    fi
}

d0-rs () {
    if [ -e /var/run/docker.sock ]; then 
        echo "Detected docker socket, bind mounting to container."
        docker-sock-gid
        DOCKER_SOCKET_MOUNT="-v $DOCKER_SOCK:$DOCKER_SOCK"
        DOCKER_SOCKET_GID_ADD="--group-add $DOCKER_GID"
    else
        echo "Glitch requires $DOCKER_SOCK to run! Did you forget to bind mount it?"
        exit 1
    fi
    CMD="docker run -it --rm \
        $DOCKER_SOCKET_MOUNT \
        -v $GLITCH_VOLUME:/var/shared \
        $DOCKER_SOCKET_GID_ADD \
        $@"
    eval $CMD
}

glitch-bind-here () {
    d0-rs $DOCKER_CWD_BIND $@ $IMAGE
}

glitch () {
    d0-rs $@ $IMAGE
}

glitch-new () {
    NAME=$1
    shift 1
    d0-rs --name="$NAME" $@ $IMAGE 
}

glitch-build () {
    docker build -t $IMAGE .
}

glitch-build-nocache () {

    docker build --no-cache -t $IMAGE .
}
